/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ec.edu.espe.militarydininghall.view;

import ec.edu.espe.militarydininghall.controller.CloudController;
import ec.edu.espe.militarydininghall.model.DateBook;
import static ec.edu.espe.militarydininghall.view.FrmBookDay.id;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import org.bson.Document;

/**
 *
 * @author David Rodriguez,THEJAVABANDITS DCCO-ESPE
 */
public class FrmCommensalMenu extends javax.swing.JFrame {

    public static String commensalId, nameCommensal, commensalType;
    private double commensalBalance;
    
    /**
     * Creates new form CommensalMenu
     */
    public FrmCommensalMenu() {
        initComponents();
    }

    public FrmCommensalMenu(String name, String id, double balance, String type) {
        initComponents();
        LocalDate today = LocalDate.now();
        FrmCommensalMenu.commensalId = id;
        FrmCommensalMenu.nameCommensal = name;
        FrmCommensalMenu.commensalType = type;
        this.commensalBalance = balance;
        lbldNameCommensal.setText("Bienvenido " + nameCommensal + "!");
        lblAccountBalance.setText(String.valueOf(commensalBalance));
        summaryOfTheMenu(CloudController.getDateBook(Long.parseLong(commensalId)), today);
    }
    
    
    private void summaryOfTheMenu(DateBook datebook, LocalDate today) {
        if (datebook == null) {
            lblAvailablePlates.setText("Parece que todavia no has hecho una reservacion, haz una reservacion para poder ver el menu aqui!");
            lblBreakfast.setVisible(false);
            lblAvailableBreakfast.setVisible(false);
            lblLunch.setVisible(false);
            lblAvailableLunch.setVisible(false);
            lblSnack.setVisible(false);
            lblAvailableSnack.setVisible(false);
        } else {
            loopForShowingTheMenu(datebook, today);
        }
    }

    private void loopForShowingTheMenu(DateBook datebook, LocalDate today) {
        List<Document> documents = CloudController.getMenuInformation();
        Map<String, Boolean> reservedDays = datebook.getReservedDays();

        for (Document doc : documents) {
            String date = doc.getString("date");
            String breakfast = doc.getString("breakfast");
            String lunch = doc.getString("lunch");
            String dinner = doc.getString("dinner");

            for (Map.Entry<String, Boolean> entry : reservedDays.entrySet()) {
                String dateReserved = entry.getKey();

                String[] parts = dateReserved.split("/");
                String day = parts[0];
                String month = parts[1];
                String year = parts[2];
                LocalDate dateSearch = LocalDate.of(Integer.parseInt(year), Integer.parseInt(month), Integer.parseInt(day));
                String dateToCompare = day + "/" + month + "/" + year;
                if (today.isBefore(dateSearch) || today.isEqual(dateSearch)) {
                    if (dateToCompare.contentEquals(date)) {
                        lblAvailablePlates.setText("Los platillos para el dia " + dateToCompare + " son los siguientes:");
                        lblBreakfast.setVisible(true);
                        lblAvailableBreakfast.setVisible(true);
                        lblLunch.setVisible(true);
                        lblAvailableLunch.setVisible(true);
                        lblSnack.setVisible(true);
                        lblAvailableSnack.setVisible(true);
                        lblAvailableBreakfast.setText(breakfast);
                        lblAvailableLunch.setText(lunch);
                        lblAvailableSnack.setText(dinner);
                        break;
                    } else if (!dateToCompare.contentEquals(date)) {
                        lblAvailablePlates.setText("Parece que todavia no se han ingresado los platillos para el dia " + dateToCompare + ".");
                        lblBreakfast.setVisible(false);
                        lblAvailableBreakfast.setVisible(false);
                        lblLunch.setVisible(false);
                        lblAvailableLunch.setVisible(false);
                        lblSnack.setVisible(false);
                        lblAvailableSnack.setVisible(false);
                        break;
                    }
                }

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbldNameCommensal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblBreakfast = new javax.swing.JLabel();
        lblLunch = new javax.swing.JLabel();
        lblSnack = new javax.swing.JLabel();
        lblAvailableBreakfast = new javax.swing.JLabel();
        lblAvailableLunch = new javax.swing.JLabel();
        lblAvailableSnack = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblAccountBalance = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblAvailablePlates = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itmLogout = new javax.swing.JMenuItem();
        itmExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itmBookDay = new javax.swing.JMenuItem();
        itmCancelDayBooking = new javax.swing.JMenuItem();
        itmSeeReservations = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(50, 91, 14));

        lbldNameCommensal.setFont(new java.awt.Font("Artifakt Element Black", 0, 24)); // NOI18N
        lbldNameCommensal.setForeground(new java.awt.Color(255, 255, 255));
        lbldNameCommensal.setText("Bienvenido! \"comensal\"");

        jLabel2.setFont(new java.awt.Font("Artifakt Element Medium", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Proximas reservaciones:");

        lblBreakfast.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblBreakfast.setForeground(new java.awt.Color(255, 255, 255));
        lblBreakfast.setText("Desayuno:");

        lblLunch.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblLunch.setForeground(new java.awt.Color(255, 255, 255));
        lblLunch.setText("Almuerzo:");

        lblSnack.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblSnack.setForeground(new java.awt.Color(255, 255, 255));
        lblSnack.setText("Merienda:");

        lblAvailableBreakfast.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAvailableBreakfast.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableBreakfast.setText("jLabel1");

        lblAvailableLunch.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAvailableLunch.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableLunch.setText("jLabel8");

        lblAvailableSnack.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAvailableSnack.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableSnack.setText("jLabel9");

        jPanel2.setBackground(new java.awt.Color(50, 54, 14));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 18, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(47, 79, 9));

        jLabel6.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tu saldo de cuenta es:");

        lblAccountBalance.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAccountBalance.setForeground(new java.awt.Color(255, 255, 255));
        lblAccountBalance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountBalance.setText("jLabel5");

        jLabel7.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("$");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAccountBalance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblAccountBalance)
                    .addComponent(jLabel7))
                .addGap(15, 15, 15))
        );

        lblAvailablePlates.setFont(new java.awt.Font("Artifakt Element Medium", 0, 16)); // NOI18N
        lblAvailablePlates.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailablePlates.setText("Este mes los platos son:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbldNameCommensal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAvailablePlates)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblSnack)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblAvailableSnack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblBreakfast)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblAvailableBreakfast))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblLunch)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblAvailableLunch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lbldNameCommensal)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(14, 14, 14)
                .addComponent(lblAvailablePlates)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBreakfast)
                    .addComponent(lblAvailableBreakfast))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLunch)
                    .addComponent(lblAvailableLunch))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSnack)
                    .addComponent(lblAvailableSnack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("Comedor Militar");

        itmLogout.setText("Cerrar sesion");
        itmLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(itmLogout);

        itmExit.setText("Salir");
        itmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExitActionPerformed(evt);
            }
        });
        jMenu1.add(itmExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Manejo de los dias");

        itmBookDay.setText("Reservar un dia");
        itmBookDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBookDayActionPerformed(evt);
            }
        });
        jMenu2.add(itmBookDay);

        itmCancelDayBooking.setText("Cancelar la reserva de un dia");
        itmCancelDayBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCancelDayBookingActionPerformed(evt);
            }
        });
        jMenu2.add(itmCancelDayBooking);

        itmSeeReservations.setText("Ver las reservaciones");
        itmSeeReservations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmSeeReservationsActionPerformed(evt);
            }
        });
        jMenu2.add(itmSeeReservations);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmCancelDayBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCancelDayBookingActionPerformed
        FrmCancelAppointment frmCancelAppointment = new FrmCancelAppointment(commensalId, nameCommensal, commensalType, commensalBalance);
        this.setVisible(false);
        frmCancelAppointment.setVisible(true);
    }//GEN-LAST:event_itmCancelDayBookingActionPerformed

    private void itmLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmLogoutActionPerformed
        FrmLogin frmLogin = new FrmLogin();
        this.setVisible(false);
        frmLogin.setVisible(true);
    }//GEN-LAST:event_itmLogoutActionPerformed

    private void itmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itmExitActionPerformed

    private void itmBookDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBookDayActionPerformed
        FrmBookDay frmBookDay = new FrmBookDay(commensalId, nameCommensal, commensalType, commensalBalance);
        this.setVisible(false);
        frmBookDay.setVisible(true);
    }//GEN-LAST:event_itmBookDayActionPerformed

    private void itmSeeReservationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmSeeReservationsActionPerformed
        FrmSeeAppointment frmSeeAppointment = new FrmSeeAppointment(commensalId, nameCommensal, commensalType, commensalBalance);
        this.setVisible(false);
        frmSeeAppointment.setVisible(true);
        frmSeeAppointment.updateTableFromDateBook(CloudController.getDateBook(id));
    }//GEN-LAST:event_itmSeeReservationsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCommensalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCommensalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCommensalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCommensalMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCommensalMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itmBookDay;
    private javax.swing.JMenuItem itmCancelDayBooking;
    private javax.swing.JMenuItem itmExit;
    private javax.swing.JMenuItem itmLogout;
    private javax.swing.JMenuItem itmSeeReservations;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblAccountBalance;
    private javax.swing.JLabel lblAvailableBreakfast;
    private javax.swing.JLabel lblAvailableLunch;
    private javax.swing.JLabel lblAvailablePlates;
    private javax.swing.JLabel lblAvailableSnack;
    private javax.swing.JLabel lblBreakfast;
    private javax.swing.JLabel lblLunch;
    private javax.swing.JLabel lblSnack;
    private javax.swing.JLabel lbldNameCommensal;
    // End of variables declaration//GEN-END:variables
}
