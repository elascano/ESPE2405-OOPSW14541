package ec.edu.espe.militarydininghall.view;

import ec.edu.espe.militarydininghall.controller.CloudController;
import ec.edu.espe.militarydininghall.model.DateBook;
import static ec.edu.espe.militarydininghall.view.FrmBookDay.id;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import org.bson.Document;

/**
 *
 * @author TheJavaBandits, DCCO-ESPE
 */
public class FrmAdminMenu extends javax.swing.JFrame {

    private String adminName, adminType, adminId;
    private double adminBalance;

    /**
     * Creates new form FmMilitaryDinindHallSystem
     */
    public FrmAdminMenu() {
        initComponents();
    }

    public FrmAdminMenu(String name, double balance, String type, String id) {
        initComponents();
        LocalDate today = LocalDate.now();
        this.adminName = name;
        this.adminBalance = balance;
        this.adminType = type;
        this.adminId = id;
        lbldNameAdmin.setText("Bienvenido, " + adminName + "!");
        lblAccountBalance.setText(String.valueOf(adminBalance));
        summaryOfTheMenu(CloudController.getDateBook(Long.parseLong(adminId)), today);
    }

        private void summaryOfTheMenu(DateBook datebook, LocalDate today) {
        if (datebook == null) {
            lblAvailablePlates.setText("Parece que todavia no has hecho una reservacion, haz una reservacion para poder ver el menu aqui!");
            lblBreakfast.setVisible(false);
            lblAvailableBreakfast.setVisible(false);
            lblLunch.setVisible(false);
            lblAvailableLunch.setVisible(false);
            lblSnack.setVisible(false);
            lblAvailableSnack.setVisible(false);
        } else {
            loopForShowingTheMenu(datebook, today);
        }
    }

    private void loopForShowingTheMenu(DateBook datebook, LocalDate today) {
        List<Document> documents = CloudController.getMenuInformation();
        Map<String, Boolean> reservedDays = datebook.getReservedDays();

        for (Document doc : documents) {
            String date = doc.getString("date");
            String breakfast = doc.getString("breakfast");
            String lunch = doc.getString("lunch");
            String dinner = doc.getString("dinner");

            for (Map.Entry<String, Boolean> entry : reservedDays.entrySet()) {
                String dateReserved = entry.getKey();

                String[] parts = dateReserved.split("/");
                String day = parts[0];
                String month = parts[1];
                String year = parts[2];
                LocalDate dateSearch = LocalDate.of(Integer.parseInt(year), Integer.parseInt(month), Integer.parseInt(day));
                String dateToCompare = day + "/" + month + "/" + year;
                if (today.isBefore(dateSearch) || today.isEqual(dateSearch)) {
                    if (dateToCompare.contentEquals(date)) {
                        lblAvailablePlates.setText("Los platillos para el dia " + dateToCompare + " son los siguientes:");
                        lblBreakfast.setVisible(true);
                        lblAvailableBreakfast.setVisible(true);
                        lblLunch.setVisible(true);
                        lblAvailableLunch.setVisible(true);
                        lblSnack.setVisible(true);
                        lblAvailableSnack.setVisible(true);
                        lblAvailableBreakfast.setText(breakfast);
                        lblAvailableLunch.setText(lunch);
                        lblAvailableSnack.setText(dinner);
                        break;
                    } else if (!dateToCompare.contentEquals(date)) {
                        lblAvailablePlates.setText("Parece que todavia no se han ingresado los platillos para el dia " + dateToCompare + ".");
                        lblBreakfast.setVisible(false);
                        lblAvailableBreakfast.setVisible(false);
                        lblLunch.setVisible(false);
                        lblAvailableLunch.setVisible(false);
                        lblSnack.setVisible(false);
                        lblAvailableSnack.setVisible(false);
                        break;
                    }
                }

            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lbldNameAdmin = new javax.swing.JLabel();
        lblAvailablePlates = new javax.swing.JLabel();
        lblBreakfast = new javax.swing.JLabel();
        lblAvailableBreakfast = new javax.swing.JLabel();
        lblAvailableLunch = new javax.swing.JLabel();
        lblSnack = new javax.swing.JLabel();
        lblLunch = new javax.swing.JLabel();
        lblAvailableSnack = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblAccountBalance = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuMilitaryDiningHall = new javax.swing.JMenu();
        itmLogout = new javax.swing.JMenuItem();
        itmExit = new javax.swing.JMenuItem();
        mnuAdministrationOfTheUsers = new javax.swing.JMenu();
        itmEditRegister = new javax.swing.JMenuItem();
        itmUpdateTheAccountBalanceForACommensal = new javax.swing.JMenuItem();
        mnuDayManagment = new javax.swing.JMenu();
        itmBookADay = new javax.swing.JMenuItem();
        itmCancelADayBooking = new javax.swing.JMenuItem();
        itmSeeReservation = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu2.setText("jMenu2");

        jMenu5.setText("jMenu5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(50, 91, 14));

        lbldNameAdmin.setFont(new java.awt.Font("Artifakt Element Black", 0, 24)); // NOI18N
        lbldNameAdmin.setForeground(new java.awt.Color(255, 255, 255));
        lbldNameAdmin.setText("Bienvenido! ");

        lblAvailablePlates.setFont(new java.awt.Font("Artifakt Element Medium", 0, 16)); // NOI18N
        lblAvailablePlates.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailablePlates.setText("Este mes los platos son:");

        lblBreakfast.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblBreakfast.setForeground(new java.awt.Color(255, 255, 255));
        lblBreakfast.setText("Desayuno:");

        lblAvailableBreakfast.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAvailableBreakfast.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableBreakfast.setText("jLabel8");

        lblAvailableLunch.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAvailableLunch.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableLunch.setText("jLabel8");

        lblSnack.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblSnack.setForeground(new java.awt.Color(255, 255, 255));
        lblSnack.setText("Merienda:");

        lblLunch.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblLunch.setForeground(new java.awt.Color(255, 255, 255));
        lblLunch.setText("Almuerzo: ");

        lblAvailableSnack.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAvailableSnack.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableSnack.setText("jLabel8");

        jPanel2.setBackground(new java.awt.Color(50, 54, 14));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(47, 79, 9));

        jLabel4.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tu saldo de cuenta es:");

        lblAccountBalance.setFont(new java.awt.Font("Artifakt Element", 0, 14)); // NOI18N
        lblAccountBalance.setForeground(new java.awt.Color(255, 255, 255));
        lblAccountBalance.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountBalance.setText("jLabel5");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("$");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAccountBalance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblAccountBalance)
                    .addComponent(jLabel2))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Artifakt Element Medium", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Proximas reservaciones:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbldNameAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblBreakfast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAvailableBreakfast))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(lblLunch)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAvailableLunch))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(lblSnack)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAvailableSnack)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAvailablePlates))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbldNameAdmin))
                .addGap(21, 21, 21)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAvailablePlates)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBreakfast)
                    .addComponent(lblAvailableBreakfast))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailableLunch)
                    .addComponent(lblLunch))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSnack)
                    .addComponent(lblAvailableSnack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        mnuMilitaryDiningHall.setText("Comedor Militar");

        itmLogout.setText("Cerrar sesion");
        itmLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmLogoutActionPerformed(evt);
            }
        });
        mnuMilitaryDiningHall.add(itmLogout);

        itmExit.setText("Salir");
        itmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExitActionPerformed(evt);
            }
        });
        mnuMilitaryDiningHall.add(itmExit);

        jMenuBar1.add(mnuMilitaryDiningHall);

        mnuAdministrationOfTheUsers.setText("Administracion de los usuarios");

        itmEditRegister.setText("Editar registro");
        itmEditRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEditRegisterActionPerformed(evt);
            }
        });
        mnuAdministrationOfTheUsers.add(itmEditRegister);

        itmUpdateTheAccountBalanceForACommensal.setText("Actualizar el balance de cuenta de un consumidor");
        itmUpdateTheAccountBalanceForACommensal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmUpdateTheAccountBalanceForACommensalActionPerformed(evt);
            }
        });
        mnuAdministrationOfTheUsers.add(itmUpdateTheAccountBalanceForACommensal);

        jMenuBar1.add(mnuAdministrationOfTheUsers);

        mnuDayManagment.setText("Manejo de los dias");

        itmBookADay.setText("Reservar un dia");
        itmBookADay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBookADayActionPerformed(evt);
            }
        });
        mnuDayManagment.add(itmBookADay);

        itmCancelADayBooking.setText("Cancelar la reservar de un dia");
        itmCancelADayBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmCancelADayBookingActionPerformed(evt);
            }
        });
        mnuDayManagment.add(itmCancelADayBooking);

        itmSeeReservation.setText("Ver reservaciones");
        itmSeeReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmSeeReservationActionPerformed(evt);
            }
        });
        mnuDayManagment.add(itmSeeReservation);

        jMenuBar1.add(mnuDayManagment);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmCancelADayBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmCancelADayBookingActionPerformed
        // TODO add your handling code here:
        FrmCancelAppointment frmCancelAppoinment = new FrmCancelAppointment(adminId, adminName, adminType, adminBalance);
        this.setVisible(false);
        frmCancelAppoinment.setVisible(false);
    }//GEN-LAST:event_itmCancelADayBookingActionPerformed

    private void itmBookADayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBookADayActionPerformed
        FrmBookDay frmBookDay = new FrmBookDay(adminId, adminName, adminType, adminBalance);
        this.setVisible(false);
        frmBookDay.setVisible(true);
    }//GEN-LAST:event_itmBookADayActionPerformed

    private void itmLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmLogoutActionPerformed
        FrmLogin frmLogin = new FrmLogin();
        this.setVisible(false);
        frmLogin.setVisible(true);

    }//GEN-LAST:event_itmLogoutActionPerformed

    private void itmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itmExitActionPerformed

    private void itmEditRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEditRegisterActionPerformed
        // TODO add your handling code here:
        FrmEditRegister frmEditRegister = new FrmEditRegister(adminName, adminBalance, adminType, adminId);
        this.setVisible(false);
        frmEditRegister.setVisible(true);
    }//GEN-LAST:event_itmEditRegisterActionPerformed

    private void itmUpdateTheAccountBalanceForACommensalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmUpdateTheAccountBalanceForACommensalActionPerformed
        FrmUpdateAccountBalance frmUpdate = new FrmUpdateAccountBalance(adminName, adminBalance, adminType, adminId);
        this.setVisible(false);
        frmUpdate.setVisible(true);
    }//GEN-LAST:event_itmUpdateTheAccountBalanceForACommensalActionPerformed

    private void itmSeeReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmSeeReservationActionPerformed

        FrmSeeAppointment frmSeeAppointment = new FrmSeeAppointment(adminId, adminName, adminType, adminBalance);
        this.setVisible(false);
        frmSeeAppointment.setVisible(true);
        frmSeeAppointment.updateTableFromDateBook(CloudController.getDateBook(id));
    }//GEN-LAST:event_itmSeeReservationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAdminMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAdminMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JMenuItem itmBookADay;
    private javax.swing.JMenuItem itmCancelADayBooking;
    private javax.swing.JMenuItem itmEditRegister;
    private javax.swing.JMenuItem itmExit;
    private javax.swing.JMenuItem itmLogout;
    private javax.swing.JMenuItem itmSeeReservation;
    private javax.swing.JMenuItem itmUpdateTheAccountBalanceForACommensal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblAccountBalance;
    private javax.swing.JLabel lblAvailableBreakfast;
    private javax.swing.JLabel lblAvailableLunch;
    private javax.swing.JLabel lblAvailablePlates;
    private javax.swing.JLabel lblAvailableSnack;
    private javax.swing.JLabel lblBreakfast;
    private javax.swing.JLabel lblLunch;
    private javax.swing.JLabel lblSnack;
    private javax.swing.JLabel lbldNameAdmin;
    private javax.swing.JMenu mnuAdministrationOfTheUsers;
    private javax.swing.JMenu mnuDayManagment;
    private javax.swing.JMenu mnuMilitaryDiningHall;
    // End of variables declaration//GEN-END:variables
}
